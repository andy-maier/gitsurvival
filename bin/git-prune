#!/bin/bash

myversion="1.0.2"
myname=$(basename $0)
mp="${myname}:"

remote="$1"

if [[ -z $remote ]]; then
  echo ""
  echo "$myname Version $myversion - Delete prunable Git branches in local repo."
  echo ""
  echo "Usage: $myname <upstream>"
  echo ""
  echo "Find out which branches for the specified upstream remote are eligible"
  echo "for pruning, and for each of them:"
  echo "* Delete the corresponding remote branch in the local repo"
  echo "* Delete the corresponding local branch"
  echo ""
  echo "Example:"
  echo ""
  echo "  $myname origin"
  echo ""
  exit 2
fi

remote_exists=$(git remote |grep "^${remote}$")
current_branch=$(git status |grep -E "^(# *)?On branch" |cut -d ' ' -f 3)

if [[ -z $remote_exists ]]; then
  echo $mp "Error: Remote does not exist in this repo: $remote"
  echo $mp "       Existing remotes configured in this repo: $(git remote)"
  exit 1
fi

if [[ $(echo $current_branch | wc -w) -ne 1 ]]; then
  echo $mp "Error: Cannot determine current branch in this repo"
  echo $mp "       Git status parsing yields: current_branch=${current_branch}"
  exit 1
fi

prunable_branches=$(git remote show $remote \
                    | grep -E "use .git remote prune. to remove" \
                    | sed -e "s/ *refs\/remotes\/$remote\/\\([^ ]*\\) .*/\\1 /g")
local_branches=$(git branch --no-color |cut -c 3- |cut -d ' ' -f 1)
remote_branches=$(git branch -r --no-color |cut -c 3- |cut -d ' ' -f 1)

#echo "Debug: prunable_branches=<${prunable_branches}>"
#echo "Debug: local_branches=<${local_branches}>"
#echo "Debug: remote_branches=<${remote_branches}>"

if [[ -n $prunable_branches ]]; then

  for lbranch in $prunable_branches; do
    if [[ $lbranch == $current_branch ]]; then
      echo $mp "Error: Pruneable branch is checked out: $lbranch"
      exit 1
    fi
  done

  for lbranch in $prunable_branches; do

    if [[ $local_branches =~ $lbranch ]]; then 
      #echo $mp "Deleting branch: $lbranch"
      cmd="git branch -D $lbranch"
      $cmd
      rc=$?
      if [[ $rc != 0 ]]; then
        echo $mp "Warning: git returns rc=$rc for: $cmd"
      fi
    fi

    rbranch=$remote/$lbranch
    if [[ $remote_branches =~ $rbranch ]]; then 
      #echo $mp "Deleting branch: $rbranch"
      cmd="git branch -D -r $rbranch"
      $cmd
      rc=$?
      if [[ $rc != 0 ]]; then
        echo $mp "Warning: git returns rc=$rc for: $cmd"
      fi
    fi

  done

else
  echo $mp "No branches eligible for pruning"
fi
